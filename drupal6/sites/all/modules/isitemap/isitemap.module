<?php
function isitemap_menu() {
  $items = array();
  $items['sitemap.xml'] = array(
    'title' => 'Site map index',
	'page callback' => 'isitemap_output',
	'access callback' => 'isitemap_access',
	'type' => MENU_CALLBACK,
  );
  return $items;
}

function isitemap_output() {
	//Log access
	watchdog('isitemap', t('Sitemap downloaded by ' . $_SERVER['HTTP_USER_AGENT']));
	//Return sitemap
	file_transfer("sitemap.xml", array("Content-type: text/xml; charset=utf-8"));
}

function isitemap_cron() {
	if((time() - variable_get('isitemap_last_cron', 0)) >= 86400) {	
		//Begin sitemap
		$sitemap = '';
		$sitemap .= '<?xml version="1.0" encoding="UTF-8"?>' . "\n";
		$sitemap .= '<urlset xmlns="http://www.sitemaps.org/schemas/sitemap/0.9" 
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
		xsi:schemaLocation="http://www.sitemaps.org/schemas/sitemap/0.9 
		http://www.sitemaps.org/schemas/sitemap/0.9/sitemap.xsd">' . "\n";

		//Add homepage
		$sitemap .= '<url>' . "\n";
		$sitemap .= "\t" . '<loc>' . url('', array('absolute' => 'true')) . "</loc>\n";
		$sitemap .= "\t" . '<changefreq>daily</changefreq>' . "\n";
		$sitemap .= "\t" . '<priority>1.0</priority>' . "\n";
		$sitemap .= '</url>' . "\n";

		//Gather links from primary links
		$menu = db_query("SELECT link_path FROM {menu_links} WHERE menu_name = 'primary-links'");
		
		//Generate sitemap for non-node primary links
		while($link = db_fetch_array($menu)) {
			if(substr(drupal_lookup_path($link['link_path'], 'source'), 0, 5) != 'node/' && $link['link_path'] != '<front>') {
				$sitemap .= '<url>' . "\n";
				$sitemap .= "\t" . '<loc>' . url($link['link_path'], array('absolute' => 'true')) . "</loc>\n";
				$sitemap .= "\t" . '<changefreq>daily</changefreq>' . "\n";
				$sitemap .= "\t" . '<priority>0.9</priority>' . "\n";
				$sitemap .= '</url>' . "\n";	
			}	
		}
		
		//Gather links from terms
		$terms = db_query("SELECT tid FROM {term_data} WHERE vid IN (2, 3, 4)");
		
		//Generate sitemap for tax terms
		while($term = db_fetch_array($terms)) {
			$sitemap .= '<url>' . "\n";
			$sitemap .= "\t" . '<loc>' . url(drupal_lookup_path('alias', 'taxonomy/term/' . $term['tid']), array('absolute' => 'true')) . "</loc>\n";
			$sitemap .= "\t" . '<lastmod>' . format_date(time(), 'custom', 'Y-m-d') . '</lastmod>' . "\n";
			$sitemap .= "\t" . '<changefreq>daily</changefreq>' . "\n";
			$sitemap .= "\t" . '<priority>0.8</priority>' . "\n";
			$sitemap .= '</url>' . "\n";
		}

		//Gather node data
		$nodes = db_query("SELECT node.nid AS nid,
   		GREATEST(node.changed, node_comment_statistics.last_comment_timestamp) AS node_comment_statistics_last_updated
 		FROM {node} node LEFT JOIN {node_comment_statistics} node_comment_statistics ON node.nid = node_comment_statistics.nid
 		WHERE (node.status <> 0) AND (node.type in ('blog', 'book', 'event', 'links', 'page', 'profil', 'story'))");

		//Generate sitemap for nodes
		while($node = db_fetch_array($nodes)) {
			$sitemap .= '<url>' . "\n";
			$sitemap .= "\t" . '<loc>' . url(drupal_lookup_path('alias', 'node/' . $node['nid']), array('absolute' => 'true')) . "</loc>\n";
			$sitemap .= "\t" . '<lastmod>' . format_date($node['node_comment_statistics_last_updated'], 'custom', 'Y-m-d') . '</lastmod>' . "\n";
			$sitemap .= "\t" . '<changefreq>monthly</changefreq>' . "\n";
			$sitemap .= "\t" . '<priority>0.5</priority>' . "\n";
			$sitemap .= '</url>' . "\n";
		}

		//End sitemap
		$sitemap .= '</urlset>';

		//Save sitemap
		file_save_data($sitemap, "sitemap.xml", FILE_EXISTS_REPLACE);
	
		//Update last run time
		variable_set('isitemap_last_cron', time());
	}
}

function isitemap_access() {
	global $user;
	return $user->uid == 0;	
}