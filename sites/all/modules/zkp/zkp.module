<?php
/**
 * Form for sending mails to people from workgroup. Set list in Block configuration.
 */
function zkp_workgroup_mail_form(&$form_state) {
  global $user;
  $form = array();
  $form['editors'] = array(
    '#type' => 'fieldset',
    '#title' => t('Editors corner'),
    '#weight' => -2,
    '#collapsible' => FALSE,
  );
  $form['editors']['workgroup_mail'] = array(
    '#type' => 'fieldset',
    '#title' => t('Send mail to ZKP Workgroup'),
    '#weight' => -1,
    '#collapsible' => TRUE,
    '#collapsed' => TRUE,
  );
  $form['editors']['workgroup_mail']['name'] = array(
   '#type' => 'textfield',
   '#title' => t('Your name, who is sending?'),
   '#default_value' => $user->name,
   '#size' => 60,
   '#maxlength' => 128,
   '#required' => TRUE,
   '#weight' => 1,
  );
  $form['editors']['workgroup_mail']['email'] = array(
   '#type' => 'textfield',
   '#title' => t('Your email'),
   '#default_value' => $user->mail,
   '#size' => 60,
   '#maxlength' => 128,
   '#required' => TRUE,
   '#weight' => 2,
 );
 $form['editors']['workgroup_mail']['subject'] = array(
   '#type' => 'textfield',
   '#title' => t('Subject'),
   '#size' => 60,
   '#maxlength' => 128,
   '#weight' => 2,
 );
 $form['editors']['workgroup_mail']['message'] = array(
   '#type' => 'textarea',
   '#title' => t('Message for workgroup'),
   '#cols' => 4,
   '#rows' =>2,
   '#required' => TRUE,
   '#weight' => 3,
 );
 $form['editors']['workgroup_mail']['submit'] = array(
   '#type' => 'submit',
   '#value' => t('Send'),
   '#weight' => 4,
 );
 return $form;
}

function zkp_workgroup_mail_form_submit($form_state) {
  $form_state = array('values' => $_POST);
  $from = $form_state['values']['name']."<".$form_state['values']['email'].">";
  $email_to = check_plain(strip_tags(variable_get('zkp_workgroup_mails', 'info@zakulturnepolitike.net')));
  $message = $form_state['values']['message'];
  $params = array(
    '!message'  => $message,
    '!subject' => $form_state['values']['subject'],
  );
  $mailed = drupal_mail('zkp', 'workgroup_mail', $email_to, language_default(), $params, $from);
  if ($mailed) { 
    drupal_set_message(t('Message sent, thank you!'));
  }
  else {
    drupal_set_message(t('Message failed, please try again!'));
  }
}

/**
 * Form for sending mail to ZKP.
 */
function zkp_custom_contact_form(&$form_state) {
  global $user;
  $contact_mail = variable_get('zkp_custom_contact', 'info@zakulturnepolitike.net');
  $form = array();
  
  if (variable_get('zkp_custom_contact_expose_mail', '1')) { 
    $form['email_address'] = array(
      '#type' => 'item',
      '#prefix' => '<div class="contact">',
      '#suffix' => '</div>',
      '#value' => l($contact_mail, 'mailto:' .$contact_mail),
      '#weight' => -1,
    );
  }
  
  $form['custom_contact'] = array(
    '#type' => 'fieldset',
    '#title' => t('Send mail directly'),
    '#weight' => 0,
    '#collapsible' => TRUE,
    '#collapsed' => FALSE,
  );
  $form['custom_contact']['name'] = array(
   '#type' => 'textfield',
   '#title' => t('Your name'),
   '#default_value' => $user->name,
   '#size' => 40,
   '#maxlength' => 128,
   '#required' => TRUE,
   '#weight' => 1,
  );
  $form['custom_contact']['email'] = array(
   '#type' => 'textfield',
   '#title' => t('Your email'),
   '#default_value' => $user->mail,
   '#size' => 40,
   '#maxlength' => 128,
   '#required' => TRUE,
   '#weight' => 2,
 );
 $form['custom_contact']['subject'] = array(
   '#type' => 'textfield',
   '#title' => t('Subject'),
   '#size' => 40,
   '#maxlength' => 128,
   '#weight' => 2,
 );
 $form['custom_contact']['message'] = array(
   '#type' => 'textarea',
   '#title' => t('Message'),
   '#cols' => 4,
   '#rows' =>2,
   '#required' => TRUE,
   '#weight' => 3,
 );
 $form['custom_contact']['submit'] = array(
   '#type' => 'submit',
   '#value' => t('Send'),
   '#weight' => 4,
 );
 if (variable_get('zkp_mlist_url', 'http://ck13.org/mailman/listinfo/zakulturnepolitike') != '') { 
   $form['mailing_list'] = array(
     '#type' => 'item',
     '#prefix' => '<div class="contact">',
     '#suffix' => '</div>',
     '#value' => '<h2>' .l(t('Sign up to our mailing list'), variable_get('zkp_mlist_url','http://ck13.org/mailman/listinfo/zakulturnepolitike')) .'</h2>',
     '#weight' => 5,
    );
  }
  return $form;
}

/*
function zkp_workgroup_mail_form_validate($form_state) {
  $form_state = array('values' => $_POST);
  if (!valid_email_address($form_state['values']['email'])) {
   form_set_error('email', t('Invalid email address, please check.'));
  }
}
*/

function zkp_custom_contact_form_submit($form_state) {
  $form_state = array('values' => $_POST);
  $from = $form_state['values']['name']."<".$form_state['values']['email'].">";
  $email_to = check_plain(strip_tags(variable_get('zkp_custom_contact', 'info@zakulturnepolitike.net')));
  $message = $form_state['values']['message'];
  $params = array(
     '!message'  => $message,
     '!subject' => $form_state['values']['subject'],
   );
  $mailed = drupal_mail('zkp', 'custom_contact', $email_to, language_default(), $params, $from);
  if ($mailed) { 
    drupal_set_message(t('Message sent, thank you!'));
  }
  else {
    drupal_set_message(t('Message failed, please try again!'));
  }
  drupal_set_message($email_to);

}

/**
 * Implementation of hook_block().
 */
function zkp_block($op = 'list', $delta = 0, $edit = array()) {
  switch ($op) {
    case 'configure':
     return zkp_block_settings_form($delta);
    break;
    
    case 'save':
      variable_set('zkp_workgroup_mails', $edit['zkp_workgroup_mails']);
      variable_set('zkp_custom_contact',  $edit['zkp_custom_contact_mail']);
      variable_set('zkp_mlist_url', $edit['zkp_mlist_url']);
      variable_set('zkp_custom_contact_expose_mail', $edit['zkp_custom_contact_expose_mail']);
      return;
    break;
    
    case 'view':
      drupal_add_css(drupal_get_path('module', 'zkp') .'/zkp.css');
      switch($delta) {
        case 0:
          $block['content'] = drupal_get_form('zkp_workgroup_mail_form');
        break;
        case 1:
          $block['content'] = drupal_get_form('zkp_custom_contact_form');
        break;
      }
      return $block;
    break;
    
    case 'list':
      $blocks[0] = array('info' => t('Workgroup mail sending form'));
      $blocks[1] = array('info' => t('Custom contact form'));
      return $blocks;
    break;
  }
}

function zkp_block_settings_form($delta) {
  $form = array();
  switch($delta) {
    case 0:
      $form['zkp_workgroup'] = array(
        '#type' => 'fieldset',
        '#title' => t('Workgroup related settings'),
        '#collapsible' => FALSE,
      );
      $form['zkp_workgroup']['zkp_workgroup_mails'] = array(
        '#type' => 'textarea',
        '#title' => t('Workgroup emails'),
        '#default_value' =>  variable_get('zkp_workgroup_mails', 'info@zakulturnepolitike.net'),
        '#description' => t('Type email addresses of the workgroup members. <strong>Separate mails with comma without space</strong>.'),
        '#required' => TRUE,
      );
    break;
  
    case 1:
      $form['zkp_custom_contact'] = array(
        '#type' => 'fieldset',
        '#title' => t('Custom contact form related settings'),
        '#collapsible' => FALSE,
      );
      $form['zkp_custom_contact']['zkp_custom_contact_mail'] = array(
        '#type' => 'textfield',
        '#title' => t('Email address to deliver mails sent from the website'),
        '#default_value' =>  variable_get('zkp_custom_contact', 'info@zakulturnepolitike.net'),
        '#required' =>TRUE,
        '#description' => t('This one is to be shown to the users if next one is checked. Mails sent through the form go to this one.'),
      );
      $form['zkp_custom_contact']['zkp_custom_contact_expose_mail'] = array(
        '#type' => 'checkbox',
        '#title' => t('Expose ZKP email address'),
        '#default_value' =>  variable_get('zkp_custom_contact_expose_mail', '1'),
        '#required' =>TRUE,
        '#description' => t('Show/hide email address on top of this block from visitors.'),
      );
      $form['zkp_custom_contact']['zkp_mlist_url'] = array(
        '#type' => 'textfield',
        '#title' => t('URL for mailing list submission'),
        '#default_value' =>  variable_get('zkp_mlist_url', 'http://ck13.org/mailman/listinfo/zakulturnepolitike'),
       // '#required' =>TRUE,
        '#description' => t('If blank there will be no link for subscription, otherwise links to mailing list page.'),
      );
     break;
  }
  return $form;
}

/**
 * Implementation of hook_mail().
 */
function zkp_mail($key, &$message, $params) {
 /* $reply_to = $params['!replyto']; 
  if ($reply_to) {
    $message['headers']['Reply-To'] = $reply_to;
  }*/
 $headers = array(
    'MIME-Version'  => '1.0',
    'Content-Type'  => "text/html; charset='utf-8'",
  );
  $message['headers'] = array_merge($message['headers'], $headers);
  $message['subject'] = t('!subject',$params);
  $message['body'] = t("!message",$params);
}

function zkp_views_pre_view(&$view, &$display_id, &$args) {
 if($view->name =='media_reports') {
   //if(count($view->display['block_1']->handler->view->result) < 6) {
     // $view->display['block_1']->display_options['items_per_page'] = 2;
   // }
    //else {
     // $view->display['block_1']->handler->view->display['block_1']->display_options['items_per_page'] = 1;
    //}      
//  krsort($view->display['block_1']->handler->view->result);
   // print '<pre>'.htmlentities(print_r($view->display['block_1']->display_options['items_per_page'], 1)). '</pre>';
 }
}

function zkp_views_query_alter(&$view, &$query){
//  print '<pre>'.htmlentities(print_r($query, 1)) .'</pre>';
// print '<pre>'.htmlentities(print_r($view->display['page_1']->handler->options['fields']['field_switch_image_value'], 1)) .'</pre>';
}
function zkp_views_pre_build(&$view) {
 //print '<pre>'.htmlentities(print_r($view->display['block_1']->handler->options['fields']['field_link_url_value'], 1)) .'</pre>';
}
function zkp_views_pre_render(&$view) {
 //print '<pre>'.htmlentities(print_r($view->display['block_1']->handler->view->pager['items_per_page'], 1)). '</pre>';
 // print '<pre>'.htmlentities(print_r($view->display['block_1'], 1)) .'</pre>';
//if($view->name =='media_reports') {
// print '<pre>'.htmlentities(print_r($view->display['block_1']->handler->options['field']['field_link_url'], 1)) .'</pre>';
//}
}
